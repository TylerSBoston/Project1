
drop table if exists emplyee_permissions;
drop table if exists reimbursements;
drop table if exists employees; 
drop table if exists job_titles;
drop table if exists permissions;
drop table if exists reimbursement_statuss;
drop table if exists reimbursement_types;


-- all manual entry tables do not have autogenerated ID's all dynamic tables have generated ID's
-- any tables keeping track of money or allowences, or anything else that may effect an 


-- seperates jobtitles from roles, allows more options than manager and allows types of employees
-- employees have 1 job title
Create Table job_titles(
	job_title_id		Integer,
	primary key(job_title_id)
);

-- Can have a users table linked for non employees, not included here, employee name 
Create Table employees (
	employee_id 		Integer,
	job_title_id		Integer,
	primary key(employee_id),	
	Constraint fk_employees_titles Foreign Key(job_title_id) References job_titles(job_title_id)
);

-- lists the permissions type, can have a table connectiong default permissions to role,
-- since that would only be used if we could register employees, it is not included
Create Table permissions (
	permission_id		Integer,  
	primary key(permission_id)
);

-- cant have the same employee to permission twice, can use seperate table + tracker variables to keep track of
-- of when employees gain and lose employees which is out of scope
Create Table emplyee_permissions(
	employee_id 		Integer,
	permission_id		Integer,
	primary key(employee_id, permission_id),
	Constraint fk_employees_p_employees Foreign Key(employee_id) References employees(employee_id),
	Constraint fk_employees_p_permissions Foreign Key(permission_id) References permissions(permission_id)
);

-- allows for multiple states, denied, approved, pending, approved pending payout, withheld
Create Table reimbursement_statuss(
	status_id		Integer,
	primary key(status_id)
) ;

-- travel/hotel, food, work supplies, replacements, ect. would help with approval/denial option
Create Table reimbursement_types(
	type_id			Integer,
	primary key(type_id)
);


Create Table reimbursements(
	reimbursement_id 	Integer generated always as identity,
	employee_id			Integer not null,
	status_id			Integer	not null,
	type_id				Integer	not null,
	primary key(reimbursement_id),
	Constraint fk_reimbursements_reimbursement_types Foreign Key(type_id) References reimbursement_types(type_id),
	Constraint fk_reimbursements_employees Foreign Key(employee_id) References employees(employee_id),
	Constraint fk_reimbursements_reimbursement_statuss Foreign Key(status_id) References  reimbursement_statuss(status_id)
);

-- any extra tables added (if any) are only tangentially related and may simulate features of an production environment










